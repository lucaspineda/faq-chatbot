version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chatbot-postgres
    environment:
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_pass
      POSTGRES_DB: chatbot_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - chatbot-network

  # FastAPI Backend
  backend:
    build:
      context: ./faq-chatbot-backend
      dockerfile: Dockerfile
    container_name: chatbot-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://chatbot_user:chatbot_pass@postgres:5432/chatbot_db
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key-change-this}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME:-ai-powered-chatbot-challenge}
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./faq-chatbot-backend:/app
    restart: unless-stopped
    networks:
      - chatbot-network

  # Next.js Frontend (Development mode)
  frontend:
    build:
      context: ./faq-chatbot-frontend
      dockerfile: Dockerfile.dev
    container_name: chatbot-frontend
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://chatbot_user:chatbot_pass@postgres:5432/chatbot_db
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key-change-this}
      - NEXTAUTH_URL=http://localhost:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_INDEX_URL=${PINECONE_INDEX_URL}
      - NEXT_PUBLIC_FASTAPI_URL=http://localhost:8000
      - FASTAPI_INTERNAL_URL=http://backend:8000
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./faq-chatbot-frontend:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    networks:
      - chatbot-network

volumes:
  postgres_data:
    driver: local

networks:
  chatbot-network:
    driver: bridge

